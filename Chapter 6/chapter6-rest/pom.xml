<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.tad.arquillian</groupId>
	<artifactId>chapter6-rest</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<repositories>
		<repository>
			<id>eviware</id>
			<url>http://www.eviware.com/repository/maven2/</url>
		</repository>
	</repositories>
	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- To set the jboss.home environment variable the Maven way, set the 
			jboss.home property in an active profile in the Maven 2 settings.xml file -->
		<jboss.home>${env.JBOSS_HOME}</jboss.home>
		<jboss.domain>default</jboss.domain>
		<!-- The version of Weld extensions in use -->
		<weld.extensions.version>1.0.0-CR2</weld.extensions.version>
		<org.arquillian.bom.version>1.0.3.Final</org.arquillian.bom.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.richfaces.bom.version>4.2.3.Final</org.richfaces.bom.version>
		<version.jacoco>0.6.0.201210061924</version.jacoco>
		<version.asm>3.3.1</version.asm>
		<jersey.release.version>1.16</jersey.release.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.shrinkwrap.resolver</groupId>
				<artifactId>shrinkwrap-resolver-bom</artifactId>
				<version>2.0.0-alpha-5</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.shrinkwrap.descriptors</groupId>
				<artifactId>shrinkwrap-descriptors-bom</artifactId>
				<version>2.0.0-alpha-4</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${org.arquillian.bom.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.richfaces</groupId>
				<artifactId>richfaces-bom</artifactId>
				<version>${org.richfaces.bom.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-api-maven</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<version>1.0.0.Final</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>eviware</groupId>
			<artifactId>maven-soapui-plugin</artifactId>
			<version>4.5.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fifesoft</groupId>
			<artifactId>rsyntaxtextarea</artifactId>
			<version>1.4.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-jacoco</artifactId>
			<version>1.0.0.Alpha5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>org.jacoco.core</artifactId>
			<version>${version.jacoco}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm-util</artifactId>
			<version>${version.asm}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>jbossas-managed-7</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.jboss.spec</groupId>
					<artifactId>jboss-javaee-6.0</artifactId>
					<version>1.0.0.Final</version>
					<type>pom</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss</groupId>
					<artifactId>jboss-ejb-client</artifactId>
					<version>1.0.14.Final</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.as</groupId>
					<artifactId>jboss-as-arquillian-container-managed</artifactId>
					<version>7.1.1.Final</version>
					<scope>test</scope>
				</dependency>
				<!-- this is only useful if you are using servlet protocol. -->
				<dependency>
					<groupId>org.jboss.arquillian.protocol</groupId>
					<artifactId>arquillian-protocol-servlet</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${version.jacoco}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
				<executions>
					<execution>
						<id>integration-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
						</configuration>
					</execution>
					<execution>
						<!-- We need to verify the content of jacoco.exec after the 'test' 
							JVM has shutdown and flushed the data to disk. -->
						<id>verify-output-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<goals>
							<goal>javadoc</goal>
						</goals>
						<phase>${javadoc-phase}</phase>
					</execution>
				</executions>
				<configuration>
					<encoding>UTF-8</encoding>
					<verbose>false</verbose>
					<show>public</show>
					<subpackages>com.tad.arquillian.chp6.rest</subpackages>

					<doclet>com.sun.jersey.wadl.resourcedoc.ResourceDoclet</doclet>
					<docletArtifacts>
						<docletArtifact>
							<groupId>com.sun.jersey.contribs</groupId>
							<artifactId>wadl-resourcedoc-doclet</artifactId>
							<version>${jersey.release.version}</version>
						</docletArtifact>
						<!-- Also specify jersey and xerces as doclet artifacts as the ResourceDoclet 
							uses classes provided by them to generate the resourcedoc. -->
						<docletArtifact>
							<groupId>com.sun.jersey</groupId>
							<artifactId>jersey-server</artifactId>
							<version>${jersey.release.version}</version>
						</docletArtifact>
						<docletArtifact>
							<groupId>xerces</groupId>
							<artifactId>xercesImpl</artifactId>
							<version>2.6.1</version>
						</docletArtifact>
					</docletArtifacts>
					<additionalparam>-output
						${project.build.outputDirectory}/resourcedoc.xml</additionalparam>

				</configuration>
			</plugin>
			<plugin>
				<groupId>com.sun.jersey.contribs</groupId>
				<artifactId>maven-wadl-plugin</artifactId>
				<version>${jersey.release.version}</version>
				<executions>
					<execution>
						<id>generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<phase>${javadoc-phase}</phase>
					</execution>
				</executions>
				<configuration>
					<wadlFile>${project.build.outputDirectory}/application.wadl</wadlFile>
					<formatWadlFile>true</formatWadlFile>
					<baseUri>http://hostname:8080/${project.artifactId}</baseUri>
					<packagesResourceConfig>
						<param>com.tad.arquillian.chp6.rest</param>
					</packagesResourceConfig>
					<wadlGenerators>
						<wadlGeneratorDescription>
							<className>com.sun.jersey.server.wadl.generators.WadlGeneratorApplicationDoc</className>
							<properties>
								<property>
									<name>applicationDocsFile</name>
									<value>${basedir}/src/main/doc/application-doc.xml</value>
								</property>
							</properties>
						</wadlGeneratorDescription>
						<wadlGeneratorDescription>
							<className>com.sun.jersey.server.wadl.generators.WadlGeneratorGrammarsSupport</className>
							<properties>
								<property>
									<name>grammarsFile</name>
									<value>${basedir}/src/main/doc/application-grammars.xml</value>
								</property>
							</properties>
						</wadlGeneratorDescription>
						<wadlGeneratorDescription>
							<className>com.sun.jersey.server.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport</className>
							<properties>
								<property>
									<name>resourceDocFile</name>
									<value>${project.build.outputDirectory}/resourcedoc.xml</value>
								</property>
							</properties>
						</wadlGeneratorDescription>
					</wadlGenerators>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>xml-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<phase>${javadoc-phase}</phase>
						<goals>
							<goal>transform</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<transformationSets>
						<transformationSet>
							<dir>${project.build.directory}/classes</dir>
							<includes>
								<include>**/application.wadl</include>
							</includes>
							<outputDir>target/generated-resources</outputDir>
							<stylesheet>src/main/doc/wadl_documentation.xsl</stylesheet>
							<outputProperties>
								<outputProperty>
									<name>standalone</name>
									<value>yes</value>
								</outputProperty>
							</outputProperties>
							<fileMappers>
								<fileMapper
									implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
									<targetExtension>.html</targetExtension>
								</fileMapper>
							</fileMappers>
						</transformationSet>
					</transformationSets>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
